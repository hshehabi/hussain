# Check if need to install rvest` library
require("httr")

library(httr)

# Create some empty vectors to hold data temporarily

# City name column
city <- c()
# Weather column, rainy or cloudy, etc
weather <- c()
# Sky visibility column
visibility <- c()
# Current temperature column
temp <- c()
# Max temperature column
temp_min <- c()
# Min temperature column
temp_max <- c()
# Pressure column
pressure <- c()
# Humidity column
humidity <- c()
# Wind speed column
wind_speed <- c()
# Wind direction column
wind_deg <- c()
# Forecast timestamp
forecast_datetime <- c()
# Season column
# Note that for season, you can hard code a season value from levels Spring, Summer, Autumn, and Winter based on your current month.
season <- c()

# Get forecast data for a given city list
get_weather_forecaset_by_cities <- function(city_names){
    df <- data.frame()
    for (city_name in city_names){
        # Forecast API URL
        forecast_url <- 'https://api.openweathermap.org/data/2.5/forecast'
        # Create query parameters
        forecast_query <- list(q = city_name, appid = "{your_api_key}", units="metric")
        # Make HTTP GET call for the given city
        response <- GET(forecast_url, query=forecast_query)
        result <- content(response, as="parsed")
        # Note that the 5-day forecast JSON result is a list of lists. You can print the reponse to check the results
        results <- result$list
        
        # Loop the json result
        for(result in results) {
                    city <- c(city , city_name)

            # City name column

        }
        
        # Add the R Lists into a data frame
# Weather column, rainy or cloudy, etc
weather <- c(weather, result$weather[[1]]$main)
# Sky visibility column
visibility <- c(visibility  , result$main$visibility )
# Current temperature column
temp <- c(temp  , result$main$temp )
# Max temperature column
temp_min <- c(temp_min  , result$main$temp_min )
# Min temperature column
temp_max <- c(temp_max  , result$main$temp_max)
# Pressure column
pressure <- c(pressure  , result$main$pressure )
# Humidity column
humidity <- c(humidity  , result$main$humidity )
# Wind speed column
wind_speed <- c(wind_speed  , result$wind$speed )
# Wind direction column
wind_deg <- c(wind_deg  , result$wind$deg )
# Forecast timestamp
forecast_datetime <- c(forecast_datetime, result$dt_txt)
# Season column
# Note that for season, you can hard code a season value from levels Spring, Summer, Autumn, and Winter based on your current month.
           #print(forecast_datetime)
            #print(as.Date(result$dt_txt))
        months <- as(format(as.Date.numeric(forecast_datetime), '%m'))
           
            indx <- setNames( rep(c('winter', 'spring', 'summer',
                   'fall'),each=3), c(12,1:11))
             #print(months)
             season <- unname(indx[as.character(months)])
             #print(season)
        
        df<-data.frame(city=city, weather=weather,visibility=visibility,temp=temp,temp_min=temp_min,
temp_max=temp_max,
pressure=pressure,
humidity=humidity,
wind_speed=wind_speed,
wind_deg=wind_deg,
forecast_datetime=forecast_datetime,
season=season )
    }
    
    # Return a data frame
    return(df)
    
}

cities <- c("Seoul", "Washington, D.C.", "Paris", "Suzhou")
cities_weather_df <- get_weather_forecaset_by_cities(cities)
summary(cities_weather_df)
